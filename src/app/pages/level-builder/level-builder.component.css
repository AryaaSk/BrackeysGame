.container
{
    position: absolute;
    top: 10px;
    bottom: 10px;
    left: 10px;
    right: 10px;
}

.containerInner
{
    height: 100%;
    width: 100%;

    display: grid;
    grid-template-columns: 100%;
    grid-template-rows: 50px auto;
}


.levelsContainer
{ 
    width: 100%;
    height: max-content;

    display: grid;
    grid-template-columns: 33% 33% 33%;
}
@media only screen and (max-width: 1150px) {
    .levelsContainer
    {
        grid-template-columns: 50% 50%;
    }
    .addLevelButton
    {
        height: 400px;
        width: 300px;
    }
}
@media only screen and (max-width: 800px) {
    .levelsContainer
    {
        grid-template-columns: 100%;
    }
}
@media only screen and (max-width: 500px) {
    .levelsContainer
    {
        zoom: 80%;
    }
}

.addLevelButton
{
    height: 500px;
    width: 400px;
    margin-bottom: 10px;

    border-radius: 20px;
    background-color: lightgrey;
    transition: 100ms background-color;
    border: none;

    font-size: 50px;
    cursor: pointer;
}
.addLevelButton:active
{
    background-color: rgb(172, 172, 172);
}

.centered
{
    display: grid;
    place-content: center;
}
.levelGrid
{
    /*The actual dimensions for the normal plane is 80 * 200, with 8 cubes on onw row*/
    width: 360px; /*320px is for the 8 cubes, and then there's an extra 40px for the delete row button */
    /*height: 800px; Height is set dynamically*/

    display: grid;
    grid-template-columns: 100%;
    grid-template-rows: repeat(auto-fill, 40px); /* since I multiplied the normal dimensions by 4, I also need to multiply the 10px by 4*/

    transform: translateX(20px); /*this is to account for the extra 40px from the delete button*/
    margin-bottom: 10px;
}
.levelObstacleRow
{
    display: grid;
    grid-template-columns: repeat(auto-fill, 40px);
}
.deleteRowButton
{
    height: 100%;
    width: 100%;

    background-color: rgb(255, 130, 130);
    opacity: 0%;
    transition: 200ms;

    border: none;
    cursor: pointer;
}
.deleteRowButton:hover
{ opacity: 100%; }
.levelObstacle
{ cursor: pointer; }